local OrionLib = loadstring(game:HttpGet("https://raw.githubusercontent.com/jensonhirst/Orion/main/source"))()
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

-- Create the main window
local Window = OrionLib:MakeWindow({
    Name = "Kaka hub DoD",
    HidePremium = false,
    SaveConfig = true,
    IntroEnabled = false
})

local InfoTab = Window:MakeTab({
    Name = "Information",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

InfoTab:AddParagraph("General Info", [[
This GUI contains multiple tabs with functions:

- Premake Tab: Predefined ability sets. Click buttons to set abilities quickly.
- Blatant Tab: Use abilities manually. Select ability from dropdown and click 'Use Ability'.
- Funny Tab: Change animations and perform funny actions like 'Howl'. Toggle auto-Howl every 2 seconds.
- Aimbot Tab: Aim automatically when performing specific abilities:
    * Taunt Aimbot: Targets players automatically when Taunt animation plays.
    * Punch Aimbot: Targets players automatically when Punch animation plays.
    * CareTaker Aimbot: Targets nearest, lowest health, all, or normal. Always aims straight, no prediction.
- Update Logs: Check all functions and latest changes.

Use toggles to activate features, dropdowns for options, and text boxes for prediction or distance values.
]])

-- Abilities list
local abilities = {
    "Adrenaline",
    "Banana",
    "Block",
    "Dash",
    "Cloak",
    "Hotdog",
    "BonusPad",
    "Caretaker",
    "Taunt",
    "Punch",
    "Revolver"
}

local selected1 = "Banana"
local selected2 = "Caretaker"

-- =======================
-- Abilities Tab
-- =======================
local AbilitiesTab = Window:MakeTab({
    Name = "Abilities",
    PremiumOnly = false
})

-- Slot 1 dropdown
AbilitiesTab:AddDropdown({
    Name = "Ability Slot 1",
    Default = selected1,
    Options = abilities,
    Callback = function(Value)
        selected1 = Value
    end
})

-- Slot 2 dropdown
AbilitiesTab:AddDropdown({
    Name = "Ability Slot 2",
    Default = selected2,
    Options = abilities,
    Callback = function(Value)
        selected2 = Value
    end
})

-- Main Set Abilities button
AbilitiesTab:AddButton({
    Name = "Set Abilities",
    Callback = function()
        local args = { { selected1, selected2 } }
        local rep = game:GetService("ReplicatedStorage")
        local events = rep:FindFirstChild("Events")
        if not events then
            warn("Events folder not found")
            return
        end
        local remotes = events:FindFirstChild("RemoteEvents")
        if not remotes then
            warn("RemoteEvents not found")
            return
        end
        local abilityRemote = remotes:FindFirstChild("AbilitySelection")
        if not abilityRemote or not abilityRemote:IsA("RemoteEvent") then
            warn("AbilitySelection RemoteEvent not found or invalid")
            return
        end

        pcall(function()
            abilityRemote:FireServer(unpack(args))
        end)
    end
})

-- =======================
-- Premake Tab
-- =======================
local PremakeTab = Window:MakeTab({
    Name = "Premake",
    PremiumOnly = false
})

local function sendAbilities(slot1, slot2)
    local args = { { slot1, slot2 } }
    local rep = game:GetService("ReplicatedStorage")
    local events = rep:FindFirstChild("Events")
    if not events then
        warn("Events folder not found")
        return
    end
    local remotes = events:FindFirstChild("RemoteEvents")
    if not remotes then
        warn("RemoteEvents not found")
        return
    end
    local abilityRemote = remotes:FindFirstChild("AbilitySelection")
    if not abilityRemote or not abilityRemote:IsA("RemoteEvent") then
        warn("AbilitySelection RemoteEvent not found or invalid")
        return
    end

    pcall(function()
        abilityRemote:FireServer(unpack(args))
    end)
end

-- Loveshot button
PremakeTab:AddButton({
    Name = "Loveshot",
    Callback = function()
        selected1 = "Revolver"
        selected2 = "Caretaker"
        sendAbilities(selected1, selected2)
    end
})

-- Carepad button
PremakeTab:AddButton({
    Name = "Carepad",
    Callback = function()
        selected1 = "Caretaker"
        selected2 = "BonusPad"
        sendAbilities(selected1, selected2)
    end
})

PremakeTab:AddLabel("Forsaken Deck")

PremakeTab:AddButton({
    Name = "Guest 1337",
    Callback = function()
        local args = { "Block", "Punch" }
        local rep = game:GetService("ReplicatedStorage")
        local events = rep:WaitForChild("Events")
        local remotes = events:WaitForChild("RemoteEvents")
        local abilityRemote = remotes:WaitForChild("AbilitySelection")
        pcall(function()
            abilityRemote:FireServer(unpack({args}))
        end)
    end
})

PremakeTab:AddButton({
    Name = "Noob",
    Callback = function()
        local args = { "Cloak", "Adrenaline" }
        local rep = game:GetService("ReplicatedStorage")
        local events = rep:WaitForChild("Events")
        local remotes = events:WaitForChild("RemoteEvents")
        local abilityRemote = remotes:WaitForChild("AbilitySelection")
        pcall(function()
            abilityRemote:FireServer(unpack({args}))
        end)
    end
})

-- Shedletsky button
PremakeTab:AddButton({
    Name = "Shedletsky",
    Callback = function()
        local args = { "Punch", "Hotdog" }
        local rep = game:GetService("ReplicatedStorage")
        local events = rep:WaitForChild("Events")
        local remotes = events:WaitForChild("RemoteEvents")
        local abilityRemote = remotes:WaitForChild("AbilitySelection")
        pcall(function()
            abilityRemote:FireServer(unpack({args}))
        end)
    end
})

-- Two Time Temu button
PremakeTab:AddButton({
    Name = "Two Time Temu",
    Callback = function()
        local args = { "Punch", "Dash" }
        local rep = game:GetService("ReplicatedStorage")
        local events = rep:WaitForChild("Events")
        local remotes = events:WaitForChild("RemoteEvents")
        local abilityRemote = remotes:WaitForChild("AbilitySelection")
        pcall(function()
            abilityRemote:FireServer(unpack({args}))
        end)
    end
})

local AimbotTab = Window:MakeTab({
    Name = "Aimbot",
    PremiumOnly = false
})

-- Revolver Aimbot (new, independent)
local revolverAimbotActive = false
local revolverPredictionValue = 2
local revolverPredictionMode = "Straight"

AimbotTab:AddToggle({
    Name = "Revolver Aimbot",
    Default = false,
    Callback = function(state)
        revolverAimbotActive = state
        if state then
            spawn(function()
                local lp = LocalPlayer
                while revolverAimbotActive do
                    if lp and lp.Character and lp.Character:FindFirstChildOfClass("Humanoid") then
                        local humanoid = lp.Character:FindFirstChildOfClass("Humanoid")
                        for _, track in pairs(humanoid:GetPlayingAnimationTracks()) do
                            if track.Animation and track.Animation.AnimationId == "rbxassetid://74108653904830" then
                                local hrp = lp.Character:FindFirstChild("HumanoidRootPart")
                                if hrp then
                                    local target = nil
                                    for _, plr in pairs(game:GetService("Players"):GetPlayers()) do
                                        if plr ~= lp and plr.Character and plr.Character:FindFirstChildOfClass("Humanoid") then
                                            local th = plr.Character:FindFirstChildOfClass("Humanoid")
                                            local tph = plr.Character:FindFirstChild("HumanoidRootPart")
                                            if th and tph and th.Health > 130 then
                                                target = tph
                                                break
                                            end
                                        end
                                    end

                                    if target then
                                        local predictedPos = target.Position
                                        local vel = target.Velocity
                                        if vel.Magnitude > 0.01 then
                                            if revolverPredictionMode == "Straight" then
                                                predictedPos = predictedPos + (vel.Unit * revolverPredictionValue)
                                            elseif revolverPredictionMode == "Sideway" then
                                                local perp = Vector3.new(-vel.Z, 0, vel.X)
                                                if perp.Magnitude > 0.01 then
                                                    predictedPos = predictedPos + (perp.Unit * revolverPredictionValue)
                                                end
                                            end
                                        end
                                        hrp.CFrame = CFrame.lookAt(hrp.Position, predictedPos)
                                    end
                                end
                            end
                        end
                    end
                    game:GetService("RunService").Heartbeat:Wait()
                end
            end)
        end
    end
})

AimbotTab:AddTextbox({
    Name = "Revolver Prediction Value",
    Default = "2",
    TextDisappear = false,
    Callback = function(value)
        local num = tonumber(value)
        if num then
            revolverPredictionValue = num
        end
    end
})

AimbotTab:AddDropdown({
    Name = "Revolver Prediction Mode",
    Default = "Straight",
    Options = {"Straight", "Sideway"},
    Callback = function(option)
        revolverPredictionMode = option
    end
})

local function faceTarget(hrp, targetPos)
    local dx = targetPos.X - hrp.Position.X
    local dz = targetPos.Z - hrp.Position.Z
    if math.abs(dx) + math.abs(dz) > 0.001 then
        local yaw = math.atan2(dx, dz)
        hrp.CFrame = CFrame.new(hrp.Position) * CFrame.Angles(0, yaw, 0)
    end
end

-- Taunt Aimbot (targets players with health > 150)
do
    local animId = "113732291990231"
    local active = false

    AimbotTab:AddToggle({
        Name = "Taunt Aimbot",
        Default = false,
        Callback = function(state) active = state end
    })

    RunService.Heartbeat:Connect(function()
        if not active then return end
        pcall(function()
            local char = LocalPlayer.Character
            if not char then return end
            local humanoid = char:FindFirstChildOfClass("Humanoid")
            if not humanoid then return end

            for _, track in ipairs(humanoid:GetPlayingAnimationTracks()) do
                if track.Animation and track.Animation.AnimationId == "rbxassetid://"..animId then
                    local hrp = char:FindFirstChild("HumanoidRootPart")
                    if not hrp then return end
                    local target = nil
                    for _, plr in ipairs(Players:GetPlayers()) do
                        if plr ~= LocalPlayer and plr.Character then
                            local th = plr.Character:FindFirstChildOfClass("Humanoid")
                            local tph = plr.Character:FindFirstChild("HumanoidRootPart")
                            if th and tph and th.Health > 150 then
                                target = tph
                                break
                            end
                        end
                    end
                    if target then faceTarget(hrp, target.Position) end
                    break
                end
            end
        end)
    end)
end

-- Punch Aimbot (targets players with health > 150)
do
    local animId = "124781750889573"
    local active = false

    AimbotTab:AddToggle({
        Name = "Punch Aimbot",
        Default = false,
        Callback = function(state) active = state end
    })

    RunService.Heartbeat:Connect(function()
        if not active then return end
        pcall(function()
            local char = LocalPlayer.Character
            if not char then return end
            local humanoid = char:FindFirstChildOfClass("Humanoid")
            if not humanoid then return end

            for _, track in ipairs(humanoid:GetPlayingAnimationTracks()) do
                if track.Animation and track.Animation.AnimationId == "rbxassetid://"..animId then
                    local hrp = char:FindFirstChild("HumanoidRootPart")
                    if not hrp then return end
                    local target = nil
                    for _, plr in ipairs(Players:GetPlayers()) do
                        if plr ~= LocalPlayer and plr.Character then
                            local th = plr.Character:FindFirstChildOfClass("Humanoid")
                            local tph = plr.Character:FindFirstChild("HumanoidRootPart")
                            if th and tph and th.Health > 150 then
                                target = tph
                                break
                            end
                        end
                    end
                    if target then faceTarget(hrp, target.Position) end
                    break
                end
            end
        end)
    end)
end
-- CareTaker Aimbot (targets nearest player with health <= 200)
do
    local animId = "128767098320893"
    local active = false

    AimbotTab:AddToggle({
        Name = "CareTaker Aimbot",
        Default = false,
        Callback = function(state) active = state end
    })

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local RunService = game:GetService("RunService")

local AimbotTab = Window:MakeTab({
    Name = "Aimbot",
    PremiumOnly = false
})

local function faceTarget(hrp, targetPos)
    local dx = targetPos.X - hrp.Position.X
    local dz = targetPos.Z - hrp.Position.Z
    if math.abs(dx) + math.abs(dz) > 0.001 then
        local yaw = math.atan2(dx, dz)
        hrp.CFrame = CFrame.new(hrp.Position) * CFrame.Angles(0, yaw, 0)
    end
end

-- Generic aimbot creator
local function createAimbot(name, animId, healthCheck)
    local active = false

    AimbotTab:AddToggle({
        Name = name,
        Default = false,
        Callback = function(state) active = state end
    })

    RunService.Heartbeat:Connect(function()
        if not active then return end
        pcall(function()
            local char = LocalPlayer.Character
            if not char then return end
            local humanoid = char:FindFirstChildOfClass("Humanoid")
            if not humanoid then return end

            for _, track in ipairs(humanoid:GetPlayingAnimationTracks()) do
                if track.Animation and track.Animation.AnimationId == "rbxassetid://"..animId then
                    local hrp = char:FindFirstChild("HumanoidRootPart")
                    if not hrp then return end
                    local nearestTarget = nil
                    local nearestDist = math.huge
                    for _, plr in ipairs(Players:GetPlayers()) do
                        if plr ~= LocalPlayer and plr.Character then
                            local th = plr.Character:FindFirstChildOfClass("Humanoid")
                            local tph = plr.Character:FindFirstChild("HumanoidRootPart")
                            if th and tph and healthCheck(th.Health) then
                                local dist = (hrp.Position - tph.Position).Magnitude
                                if dist < nearestDist then
                                    nearestDist = dist
                                    nearestTarget = tph
                                end
                            end
                        end
                    end
                    if nearestTarget then faceTarget(hrp, nearestTarget.Position) end
                    break
                end
            end
        end)
    end)
end

-- Taunt Aimbot (targets players with health > 150)
createAimbot("Taunt Aimbot", "113732291990231", function(hp) return hp > 150 end)

-- Punch Aimbot (targets players with health > 150)
createAimbot("Punch Aimbot", "124781750889573", function(hp) return hp > 150 end)

-- CareTaker Aimbot (targets nearest player with health <= 200)
createAimbot("CareTaker Aimbot", "128767098320893", function(hp) return hp <= 200 end)

-- =======================
-- Blatant Tab
-- =======================
local BlatantTab = Window:MakeTab({
    Name = "Blatant",
    PremiumOnly = false
})

local selectedAbility = abilities[1] -- default

-- Dropdown for Blatant tab
BlatantTab:AddDropdown({
    Name = "Select Ability",
    Default = selectedAbility,
    Options = abilities,
    Callback = function(value)
        selectedAbility = value
    end
})

-- Button to Use Ability
BlatantTab:AddButton({
    Name = "Use Ability",
    Callback = function()
        -- Fire the ability
        local args = { selectedAbility }
        local rep = game:GetService("ReplicatedStorage")
        local events = rep:WaitForChild("Events")
        local remotes = events:WaitForChild("RemoteFunctions")
        local useAbility = remotes:WaitForChild("UseAbility")
        pcall(function()
            useAbility:InvokeServer(unpack(args))
        end)
    end
})

local blatantToggleActive = false

BlatantTab:AddToggle({
    Name = "Stun Helper (Punch)",
    Default = false,
    Callback = function(state)
        blatantToggleActive = state
        if state then
            spawn(function()
                local lp = LocalPlayer
                while blatantToggleActive do
                    if lp.Character and lp.Character:FindFirstChildOfClass("Humanoid") then
                        local humanoid = lp.Character:FindFirstChildOfClass("Humanoid")
                        for _, track in pairs(humanoid:GetPlayingAnimationTracks()) do
                            if track.Animation.AnimationId == "rbxassetid://124781750889573" then
                                local hrp = lp.Character:FindFirstChild("HumanoidRootPart")
                                if hrp then
                                    -- Find one valid target only
                                    local target = nil
                                    for _, plr in pairs(game:GetService("Players"):GetPlayers()) do
                                        if plr ~= lp and plr.Character and plr.Character:FindFirstChildOfClass("Humanoid") then
                                            local targetHumanoid = plr.Character:FindFirstChildOfClass("Humanoid")
                                            if targetHumanoid.Health > 233 and plr.Character:FindFirstChild("HumanoidRootPart") then
                                                target = plr.Character.HumanoidRootPart
                                                break
                                            end
                                        end
                                    end

                                    if target then
                                        local originalCFrame = hrp.CFrame
                                        -- teleport behind + face target
                                        local behindCFrame = target.CFrame * CFrame.new(0, 0, -2)
                                        hrp.CFrame = CFrame.lookAt(behindCFrame.Position, target.Position)

                                        -- keep facing target for 0.7 sec
                                        local start = tick()
                                        while tick() - start < 0.7 and blatantToggleActive and hrp and target do
                                            hrp.CFrame = CFrame.lookAt(hrp.Position, target.Position)
                                            game:GetService("RunService").Heartbeat:Wait()
                                        end

                                        -- teleport back safely
                                        if hrp then
                                            hrp.CFrame = originalCFrame
                                        end
                                    end
                                end
                            end
                        end
                    end
                    wait(0.1)
                end
            end)
        end
    end
})

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local RunService = game:GetService("RunService")

local FunnyTab = Window:MakeTab({
    Name = "Funny",
    PremiumOnly = false
})

local function playAnim(animId)
    local char = LocalPlayer.Character
    if not char then return end
    local humanoid = char:FindFirstChildOfClass("Humanoid")
    if not humanoid then return end

    local anim = Instance.new("Animation")
    anim.AnimationId = "rbxassetid://"..animId
    local track = humanoid:LoadAnimation(anim)
    track:Play()
end

-- Crash Out button
FunnyTab:AddButton({
    Name = "Crash Out",
    Callback = function()
        playAnim("130725432915474")
    end
})

-- Howl button
FunnyTab:AddButton({
    Name = "Howl",
    Callback = function()
        playAnim("109803302620003")
    end
})

-- BackShot toggle
do
    local active = false
    local animId = "109803302620003"
    local lastTime = 0

    FunnyTab:AddToggle({
        Name = "BackShot",
        Default = false,
        Callback = function(state) active = state end
    })

    RunService.Heartbeat:Connect(function(dt)
        if not active then return end
        lastTime = lastTime + dt
        if lastTime >= 0.7 then
            lastTime = 0
            playAnim(animId)
        end
    end)
end

OrionLib:Init()
